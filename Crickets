import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
ground_cricket_data = {"Chirps/Second": [20.0, 16.0, 19.8, 18.4, 17.1, 15.5, 14.7,
                                         15.7, 15.4, 16.3, 15.0, 17.2, 16.0, 17.0,
                                         14.4],
                       "Ground Temperature": [88.6, 71.6, 93.3, 84.3, 80.6, 75.2, 69.7,
                                              71.6, 69.4, 83.3, 79.6, 82.6, 80.6, 83.5,
                                              76.3]}
df = pd.DataFrame(ground_cricket_data)
df.describe()
df.plot(x='Ground Temperature',y= 'Chirps/Second',style='o')
plt.title('Temperature vs Chirps', size=20)
plt.xlabel('Ground Temperature')
plt.ylabel('Chirps/Second')
df.corr()
x= df.loc[:,['Ground Temperature']]
y=df.loc[:,'Chirps/Second']
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.3)

#scaling
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
scaler.fit(x_train)
x_train = scaler.transform(x_train)
x_test = scaler.transform(x_test)
#Model
from sklearn.linear_model import LinearRegression
reg= LinearRegression()
reg.fit(x_train,y_train)
print('Coefficient',reg.coef_[0],'Intercept',reg.intercept_)

y_pred = reg.predict(x_test)
comparison= pd.DataFrame({'Actual':y_test,'Predicted':y_pred})
comparison

from sklearn import metrics
print('R2 Score:',reg.score(x_test,y_test))

print('Enter temperature in Farenheit')
temper= int(input())

if temper>100 or temper<60:
  print('Cricket Does not chirp')
else:
  temper1= temper
  temper = (temper-scaler.mean_)/scaler.scale_
  a= reg.coef_[0]*temper
  b= reg.intercept_
  print('The number of chirps at ',temper1,' farenheit is ',round((a[0]+b),2))


#Finding the temperature based on number of chirps per second
print("Enter the number of chirps/second")
chirps=int(input())
t= (chirps-reg.intercept_)/reg.coef_[0]
t= (t*scaler.scale_)+scaler.mean_
print("The ground temp at ",chirps," Chirps/second is ",round(t[0],2)," Farenheit" )

#charting the original equation on the chart
df.plot(x='Ground Temperature',y= 'Chirps/Second',style='o')
plt.title('Temperature vs Chirps', size=20)
plt.xlabel('Ground Temperature')
plt.ylabel('Chirps/Second')
plt.text(85,16,"Y= {}*X + {}".format(round(reg.coef_[0],2),round(reg.intercept_),2),fontsize=15)
